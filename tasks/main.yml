---
- name: ThreatStack | Ensure dependencies are installed
  apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present

- name: ThreatStack | Add repo APT GPG key
  get_url:
    dest: '/etc/apt/trusted.gpg.d/threatstack.asc'
    url: '{{ threatstack_gpg_key_url }}'
    checksum: 'sha256:{{ threatstack_gpg_key_sha256 }}'

- name: ThreatStack | Add APT repo
  apt_repository:
    repo: 'deb {{ threatstack_repo_url }} {{ ansible_distribution_release }} main'
    filename: '{{ threatstack_repo_file }}'
    state: present
    update_cache: true
    mode: 0644

- name: ThreatStack | Install agent
  apt:
    name: '{{ threatstack_package }}'
    state: latest
    update_cache: true
  register: installation

- name: 'ThreatStack | Reload systemd services'
  systemd:
    daemon_reload: true
  when: installation.changed

- name: 'ThreatStack | Verify {{ threatstack_service }} service is stopped'
  systemd:
    name: '{{ threatstack_service }}'
    state: stopped

- name: 'ThreatStack | Initial {{ threatstack_service }} service setup' 
  command: >
    tsagent setup \
      --deploy-key="{{ threatstack_deploy_key }}" \
      {% for rule_set in threatstack_rule_sets %}
      --ruleset="{{ rule_set }}" 
      {% endfor %}
  when: installation.changed

- name: 'ThreatStack | Configure: {{ item.k }}={{ item.v }}'
  command: >
    tsagent config -set {{ item.k }} {{ item.v }}
  with_items: '{{ threatstack_config }}'

- name: 'ThreatStack | Verify {{ threatstack_service }} service is started'
  systemd:
    name: '{{ threatstack_service }}'
    state: started
    enabled: true
    masked: false

- name: ThreatStack | Create consul service definition
  copy:
    src: consul_service.json
    dest: /etc/consul/service_threatstack.json
    mode: 0644
  when: threatstack_consul_service_enabled
  register: consul_service_config

- name: ThreatStack | Reload consul
  systemd:
    name: 'consul'
    state: 'reloaded'
  when: consul_service_config.changed
